Описание библиотеки:
Библиотека предназанчена для работы с ориентированными взвешенными несвязными графами, допускаются петли и кратные ребра, ребра отрицательного веса. Исходными данными задания для графа является количество вершин в нем. Вершины нумеруются от 0 до n-1, где n - количество вершин графа. В случае, если количество вершин заранее неизвестно, рекумендуется задать этот параметр максимально возможным числом. Количество вершин должно помещаться в тип long. В библиотеке есть функции инициализации и деинициализации графа. Далее имеется функция добавления ребра add_edge в формате (*g, u, v, cost), где *g - указатель на структура графа, в который добавляется ребро, u - номер начальной вершины ребра, v - номер конечной вершины ребра, cost - вес ребра, помещающийся в тип int. Функция возвращает код ошибки. Также имеется аналогичная функция удаления ребра.
Помимо вышеперечисленных функций реализованы функции проверки графа на ацикличность и подсчета расстояний от заданной вершины до всех остальных алгоритмом Форда-Беллмана. Функция проверки на ацикличность возвращает код ошибки либо результат проверки. Алгоритм Форда-Белламана заполняет массив расстояний, если вершина недостижима, то расстяние до нее считается равным бесконечности, в случае наличия отрицательного цикла в графе функция сообщает пользователю об этом, расстояния до вершин не определены.

Для удобства работы с библиотекой была реализована программа main.c, которая может читать граф из файла, вызывать функции проверки на ацикличность и подсчета расстояний, а также выводить текстовое представление графа.

- Для компиляции библиотеки для работы с графами используйте команду
make graph_lib

- Для сброки всей программы используйте команду
make

- Для тестирования программы на заранее заготовленных тестах используйте команды
./a.out testI, где I = 0..5

- Для тестирования программы на собственных тестах создайте свой собственный файл с описанием графа и команд вызова функций и запустите программу с ним используя команду ./a.out your_test. Описание графа и команд должно иметь следующий формат: в первой строке написано количество вершин, далее в остальных строках описание команд в следующем виде:
add u v cost - для добавления ребра
del u v cost - для удаления ранее добавленного ребра
f-b u - подсчет расстояний от вершины u до всех остальных
cyc - проверка графа на ацикличность
wrt - вывод текущих ребер графа

- Для удаления всех временных и бинарных файлов используйте команду
make clean
